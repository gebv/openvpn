#!/bin/sh

set -e

[ -d /dev/net ] ||
    mkdir -p /dev/net
[ -c /dev/net/tun ] ||
    mknod /dev/net/tun c 10 200

if [ -r "$EASYRSA_PKI/crl.pem" ]; then
    if [ ! -r "$OPENVPN/crl.pem" ]; then
        ln "$EASYRSA_PKI/crl.pem" "$OPENVPN/crl.pem"
        chmod 644 "$OPENVPN/crl.pem"
    fi
#    ARGS+=("--crl-verify" "$OPENVPN/crl.pem")
fi

# разрешаем подключаться к openvpn-серверу с любой стороны
iptables -A INPUT  -p udp  --dport 1194 -j ACCEPT
iptables -A INPUT -p tcp --dport 943 -j ACCEPT

# разрешаем всем openvpn-клиентам соединение с интернетами
iptables -A FORWARD -i tun0 -o eth0 -j ACCEPT
iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# iptables -t nat -A POSTROUTING -s 192.168.255.0/24 -o eth0 -j MASQUERADE

#ip -6 route show default 2>/dev/null
#if [ $? = 0 ]; then
#    echo "Enabling IPv6 Forwarding"
#    # If this fails, ensure the docker container is run with --privileged
#    # Could be side stepped with `ip netns` madness to drop privileged flag

#    sysctl -w net.ipv6.conf.default.forwarding=1 || echo "Failed to enable IPv6 Forwarding default"
#    sysctl -w net.ipv6.conf.all.forwarding=1 || echo "Failed to enable IPv6 Forwarding"
#fi

exec openvpn server1194.conf > server1194.log & openvpn server943.conf > server943.log
